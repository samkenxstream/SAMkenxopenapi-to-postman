{
  "openapi": "3.0.3",
  "info": {
    "title": "Google Maps Platform",
    "description": "API Specification for Google Maps Platform",
    "version": "1.17.16"
  },
  "servers": [
    {
      "url": "https://www.googleapis.com"
    }
  ],
  "paths": {
    "/geolocation/v1/geolocate": {
      "post": {
        "servers": [
          {
            "url": "https://www.googleapis.com"
          }
        ],
        "tags": [
          "Geolocation API"
        ],
        "description": "Geolocation API returns a location and accuracy radius based on information about cell towers and WiFi nodes that the mobile client can detect. This document describes the protocol used to send this data to the server and to return a response to the client.\n\nCommunication is done over HTTPS using POST. Both request and response are formatted as JSON, and the content type of both is `application/json`.\n\nYou must specify a key in your request, included as the value of a`key` parameter. A `key` is your application's  API key. This key identifies your application for purposes of quota management. Learn how to [get a key](https://developers.google.com/maps/documentation/geolocation/get-api-key).",
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_schemas_GeolocationResponse.yml"
                },
                "examples": {
                  "WIFI": {
                    "value": {
                      "location": {
                        "lat": 37.421925,
                        "lng": -122.0841293
                      },
                      "accuracy": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 BAD REQUEST",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/_schemas_test.yml"
                    },
                    "other": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "The request body must be formatted as JSON.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/_schemas_GeolocationRequest.yml"
              },
              "examples": {
                "WIFI": {
                  "value": {
                    "considerIp": "false",
                    "wifiAccessPoints": [
                      {
                        "macAddress": "84:d4:7e:09:a5:f1",
                        "signalStrength": -43,
                        "signalToNoiseRatio": 0
                      },
                      {
                        "macAddress": "44:48:c1:a6:f3:d0",
                        "signalStrength": -55,
                        "signalToNoiseRatio": 0
                      }
                    ]
                  }
                },
                "Cell Towers": {
                  "value": {
                    "cellTowers": [
                      {
                        "cellId": 170402199,
                        "locationAreaCode": 35632,
                        "mobileCountryCode": 310,
                        "mobileNetworkCode": 410,
                        "age": 0,
                        "signalStrength": -60,
                        "timingAdvance": 15
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": false
        }
      }
    }
  },
  "components": {
    "parameters": {
      "arrival_time": {
        "name": "arrival_time",
        "description": "Specifies the desired time of arrival for transit directions, in seconds since midnight, January 1, 1970 UTC. You can specify either `departure_time` or `arrival_time`, but not both. Note that `arrival_time` must be specified as an integer.\n",
        "in": "query",
        "schema": {
          "type": "number"
        }
      }
    },
    "schemas": {
      "_schemas_LatLngLiteral.yml": {
        "type": "object",
        "title": "LatLngLiteral",
        "description": "An object describing a specific location with Latitude and Longitude in decimal degrees.",
        "required": [
          "lat",
          "lng"
        ],
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude in decimal degrees"
          },
          "lng": {
            "type": "number",
            "description": "Longitude in decimal degrees"
          }
        }
      },
      "_schemas_GeolocationResponse.yml": {
        "type": "object",
        "title": "GeolocationResponse",
        "description": "A successful geolocation request will return a JSON-formatted response defining a location and radius.",
        "required": [
          "location",
          "accuracy"
        ],
        "properties": {
          "location": {
            "$ref": "#/components/schemas/_schemas_LatLngLiteral.yml"
          },
          "accuracy": {
            "description": "The accuracy of the estimated location, in meters. This represents the radius of a circle around the given `location`. If your Geolocation response shows a very high value in the `accuracy` field, the service may be geolocating based on the  request IP, instead of WiFi points or cell towers. This can happen if no cell towers or access points are valid or recognized. To confirm that this is the issue, set `considerIp` to `false` in your request. If the response is a `404`, you've confirmed that your `wifiAccessPoints` and `cellTowers` objects could not be geolocated.",
            "type": "number"
          }
        },
        "example": {
          "location": {
            "lat": 37.421925,
            "lng": -122.0841293
          },
          "accuracy": 30
        }
      },
      "_schemas_test.yml": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "second": {
            "type": "integer"
          }
        }
      },
      "_schemas_GeolocationRequest.yml": {
        "type": "object",
        "title": "GeolocationRequest",
        "description": "The request body must be formatted as JSON. The following fields are supported, and all fields are optional.",
        "properties": {
          "homeMobileCountryCode": {
            "type": "integer",
            "description": "The cell tower's Mobile Country Code (MCC)."
          },
          "homeMobileNetworkCode": {
            "type": "integer",
            "description": "The cell tower's Mobile Network Code. This is the MNC for GSM and WCDMA; CDMA uses the System ID (SID)."
          },
          "radioType": {
            "type": "string",
            "description": "The mobile radio type. Supported values are lte, gsm, cdma, and wcdma. While this field is optional, it should be included if a value is available, for more accurate results."
          },
          "carrier": {
            "type": "string",
            "description": "The carrier name."
          },
          "considerIp": {
            "type": "string",
            "description": "Specifies whether to fall back to IP geolocation if wifi and cell tower signals are not available. Defaults to true. Set considerIp to false to disable fall back."
          },
          "cellTowers": {
            "type": "array",
            "description": "The request body's cellTowers array contains zero or more cell tower objects.",
            "items": {
              "$ref": "#/components/schemas/_schemas_CellTower.yml"
            }
          }
        }
      },
      "_schemas_CellTower.yml": {
        "type": "object",
        "title": "CellTower",
        "description": "Attributes used to describe a cell tower. The following optional fields are not currently used, but may be included if values are available: `age`, `signalStrength`, `timingAdvance`.",
        "required": [
          "cellId",
          "locationAreaCode",
          "mobileCountryCode",
          "mobileNetworkCode"
        ],
        "properties": {
          "cellId": {
            "description": "Unique identifier of the cell. On GSM, this is the Cell ID (CID); CDMA networks use the Base Station ID (BID). WCDMA networks use the UTRAN/GERAN Cell Identity (UC-Id), which is a 32-bit value concatenating the Radio Network Controller (RNC) and Cell ID. Specifying only the 16-bit Cell ID value in WCDMA networks may return inaccurate results.",
            "type": "integer"
          },
          "locationAreaCode": {
            "description": "The Location Area Code (LAC) for GSM and WCDMA networks. The Network ID (NID) for CDMA networks.",
            "type": "integer"
          },
          "mobileCountryCode": {
            "description": "The cell tower's Mobile Country Code (MCC).",
            "type": "integer"
          },
          "mobileNetworkCode": {
            "description": "The cell tower's Mobile Network Code. This is the MNC for GSM and WCDMA; CDMA uses the System ID (SID).",
            "type": "integer"
          },
          "age": {
            "description": "The number of milliseconds since this cell was primary. If age is 0, the cellId represents a current measurement.",
            "type": "integer"
          },
          "signalStrength": {
            "description": "Radio signal strength measured in dBm.",
            "type": "number"
          },
          "timingAdvance": {
            "description": "The timing advance value.",
            "type": "number"
          }
        },
        "example": {
          "cellTowers": [
            {
              "cellId": 170402199,
              "locationAreaCode": 35632,
              "mobileCountryCode": 310,
              "mobileNetworkCode": 410,
              "age": 0,
              "signalStrength": -60,
              "timingAdvance": 15
            }
          ]
        }
      },
      "Bounds": {
        "title": "Bounds",
        "type": "object",
        "description": "A rectangle in geographical coordinates from points at the southwest and northeast corners.",
        "required": [
          "northeast",
          "southwest"
        ],
        "properties": {
          "northeast": {
            "$ref": "#/components/schemas/_schemas_LatLngLiteral.yml"
          },
          "southwest": {
            "$ref": "#/components/schemas/_schemas_LatLngLiteral.yml"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "query",
        "name": "key"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Directions",
      "description": "The Directions API is a web service that uses an HTTP request to return JSON or XML-formatted directions between locations. You can receive directions for several modes of transportation, such as transit, driving, walking, or cycling.",
      "externalDocs": {
        "url": "https://developers.google.com/maps/documentation/directions/overview"
      }
    }
  ]
}